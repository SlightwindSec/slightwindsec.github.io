<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Diffie–Hellman on Slightwind</title>
    <link>https://slightwindsec.github.io/tags/diffiehellman/</link>
    <description>Recent content in Diffie–Hellman on Slightwind</description>
    <image>
      <title>Slightwind</title>
      <url>https://slightwindsec.github.io/papermod-cover.png</url>
      <link>https://slightwindsec.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 May 2020 13:33:02 +0000</lastBuildDate><atom:link href="https://slightwindsec.github.io/tags/diffiehellman/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writeup for Crypto problems in De1CTF 2020</title>
      <link>https://slightwindsec.github.io/posts/ctf/writeup-for-crypto-problems-in-de1ctf-2020/</link>
      <pubDate>Mon, 04 May 2020 13:33:02 +0000</pubDate>
      
      <guid>https://slightwindsec.github.io/posts/ctf/writeup-for-crypto-problems-in-de1ctf-2020/</guid>
      <description>Writeup for Crypto problems in De1CTF 2020 NLFSR task.py
from flag import a, b, c, d, flag assert flag == &amp;quot;De1CTF{&amp;quot; + &#39;&#39;.join([hex(i)[2:] for i in [a, b, c, d]]) + &amp;quot;}&amp;quot; assert [len(bin(i)[2:]) for i in [a, b, c, d]] == [19, 19, 13, 6] ma, mb, mc, md = 0x505a1, 0x40f3f, 0x1f02, 0x31 def lfsr(r, m): return ((r &amp;lt;&amp;lt; 1) &amp;amp; 0xffffff) ^ (bin(r &amp;amp; m).count(&#39;1&#39;) % 2) def combine(): global a, b, c, d a = lfsr(a, ma) b = lfsr(b, mb) c = lfsr(c, mc) d = lfsr(d, md) [ao, bo, co, do] = [i &amp;amp; 1 for i in [a, b, c, d]] return (ao*bo) ^ (bo*co) ^ (bo*do) ^ co ^ do def genkey(nb): s = &#39;&#39; for i in range(nb*8): s += str(combine()) open(&amp;quot;data&amp;quot;, &amp;quot;w+&amp;quot;).</description>
    </item>
    
  </channel>
</rss>
